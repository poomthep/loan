// js/session-guard.js
// ========================================
// SESSION GUARD - Legacy Compatibility
// ========================================

/**
 * Session Guard ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö backward compatibility
 * ‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ä‡πâ AuthManager ‡πÅ‡∏ó‡∏ô ‡πÅ‡∏ï‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ error
 */

export function startSessionGuard() {
  console.log('üîê Session Guard started (legacy compatibility mode)');
  console.log('üí° Using AuthManager for actual session management');
  
  // ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£‡∏à‡∏£‡∏¥‡∏á‡πÜ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ AuthManager ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß
  return true;
}

/**
 * Check session status (legacy function)
 */
export function checkSession() {
  // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ AuthManager ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏ó‡∏ô
  if (typeof window !== 'undefined' && window.AuthManager) {
    return window.AuthManager.isAuthenticated();
  }
  
  // Fallback: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏à‡∏≤‡∏Å localStorage
  return !!localStorage.getItem('loan_session_id');
}

/**
 * Get current user (legacy function)
 */
export function getCurrentUser() {
  if (typeof window !== 'undefined' && window.AuthManager) {
    return window.AuthManager.getCurrentUser();
  }
  
  return null;
}

/**
 * Session timeout handler (legacy)
 */
export function handleSessionTimeout() {
  console.warn('Session timeout handled by AuthManager');
  
  if (typeof window !== 'undefined' && window.AuthManager) {
    window.AuthManager.signOut();
  }
}

// Export for backward compatibility
export default {
  startSessionGuard,
  checkSession,
  getCurrentUser,
  handleSessionTimeout
};